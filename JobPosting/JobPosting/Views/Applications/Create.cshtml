@model JobPosting.Models.Application

@{
    ViewBag.Title = "Create";
    var postingID = ViewBag.postingID;
    var applicantID = ViewBag.applicantID;
    
}
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>
<script src="~/Scripts/Code.js"></script>
<script type="text/javascript">
            $(document).ready(function () {
                var ApplicationsCart = [];
                var selectedQualification = [];
                var selectedSkill = [];


                //pre-processing file
                var count = 0;
                var control = document.getElementById("theFiles");
                var resume = [];
                $("#theFiles").change(function (e) {
                    var files = control.files;
                    resume = [];
                    var fileInfo;
                    for (var i = 0; i < files.length; i++) {
                        var file = new Blob([files[i]]);
                        fileInfo = files[i];
                        var r = new FileReader();
                        r.readAsArrayBuffer(file);
                        r.onload = function () {
                            var arrayBuffer = this.result,
                                bytes = new Uint8Array(arrayBuffer);
                            console.log(bytes);
                            console.log(jQuery.type(bytes));
                            resume.push({
                                PostingID: $("#PostingID").val(),
                                ApplicantID: $("#ApplicantID").val(),
                                fileName: fileInfo.name,
                                content: bytes,
                                mimeType: fileInfo.type
                            });
                            console.log(resume);
                        };
                    }
                });
                // handle click event
                $("#btnAddToCart").click(function () {
                    var d = new Date();
                    d.setTime(d.getTime() + (60 * 60 * 24 * 365 * 1000));
                    $("#selectedQualification:checked").each(function (e) {
                        selectedQualification.push($(this).val());
                    });

                    $("#selectedSkill:checked").each(function (e) {
                        selectedSkill.push($(this).val());
                    });

                    ApplicationsCart.push({
                        Priority: $("#Priority").val(),
                        PostingID: $("#PostingID").val(),
                        ApplicantID: $("#ApplicantID").val(),
                        Comment: $("#Comment").val(),
                        selectedQualification: selectedQualification,
                        selectedSkill: selectedSkill,
                        Resume: resume

                    });

                    console.log(ApplicationsCart);


                    //Cookies.set("ApplicationCart", jsonStr, { expires: 365 });
                    window.localStorage.setItem('Test', JSON.stringify(ApplicationsCart));


                    var cartValue = localStorage.getItem('Test');
                    var cartObj = JSON.parse(cartValue);
                    console.log(cartObj);
                    ////selectedQualification.forEach(function (e) {
                    ////    $("#test").text("The last Value: " + e)
                    ////})

                    //cartObj.forEach(function (e) {
                    //    count += 1
                    //    //$("#test").text("ApplicantID: " + e.ApplicantID + " PostingID: " + e.PostingID + " Priority: " + e.Priority + " SelecctedQualification: " + e.selectedQualification);
                    //    $("#test").text(count)
                    //})

                });


            }
            )

</script>


<h2>Apply For Job</h2>


@using (Html.BeginForm("Create", "Applications", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Application</h4>
    <hr />

    <div class="container">
        <div class="row">
            <div class="col-6">
                <dl class="dl-horizontal">
                    @{
            JobPosting.Models.Posting posting = ViewBag.posting;

            <dt>
                @Html.DisplayNameFor(lItem => posting.Position.JobGroup.GroupTitle)
            </dt>
            <dd>
                @Html.DisplayFor(lItem => posting.Position.JobGroup.GroupTitle)
            </dd>
            <dt>
                @Html.DisplayNameFor(lItem => posting.Position.PositionCode)
            </dt>
            <dd>
                @Html.DisplayFor(lItem => posting.Position.PositionCode)
            </dd>
            <dt>
                Locations
            </dt>

foreach (var a in posting.JobLocations)
{
            <dd>
                @Html.DisplayFor(aItem => a.Location.Address)
            </dd>
}
            <dt>
                Qualifications
            </dt>
foreach (var q in posting.JobRequirements)
{
            <dd>
                @Html.DisplayFor(qItem => q.Qualification.QlfDescription)
            </dd>
}
            <dt>
                Skills
            </dt>
foreach (var s in posting.PostingSkills)
{
            <dd>
                @Html.DisplayFor(qItem => s.Skill.SkillDescription)
            </dd>
}
            <dt>
                @Html.DisplayNameFor(lItem => posting.pstCompensationType)
            </dt>
            <dd>
                @if (posting.pstCompensationType == 1)
    {
            @: Hourly
}
else if (posting.pstCompensationType == 2)
{
            @: Monthly
}
else
{
            @: Yearly
}
            </dd>

            <dt>
                @Html.DisplayNameFor(lItem => posting.pstJobDescription)
            </dt>
            <dd>
                @Html.DisplayFor(lItem => posting.pstJobDescription)
            </dd>

            <dt>
                @Html.DisplayNameFor(lItem => posting.pstNumPosition)
            </dt>
            <dd>
                @Html.DisplayFor(lItem => posting.pstNumPosition)
            </dd>

            <dt>
                @Html.DisplayNameFor(lItem => posting.pstFTE)
            </dt>
            <dd>
                @Html.DisplayFor(lItem => posting.pstFTE)
            </dd>

            <dt>
                @Html.DisplayNameFor(lItem => posting.pstSalary)
            </dt>
            <dd>
                @Html.DisplayFor(lItem => posting.pstSalary)
            </dd>



                    }
                </dl>




            </div>
            <div class="col-6">
                <input type="hidden" name="PostingID" id="PostingID" value="@postingID">
                <input type="hidden" name="ApplicantID" id="ApplicantID" value="@applicantID">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="control-label">
                        Upload Resumes/Letters:
                    </label>
                    <div>
                        <input type="file" class="" name="theFiles" id="theFiles" multiple="multiple" /><br />
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">Requirements</label>
                        @Html.ListBox("selectedQualification", (MultiSelectList)ViewBag.jobRequirements, new { @class = "form-control custom-select2" })
                </div>

                <div class="form-group">
                    <label class="control-label">Skills</label>
                        @Html.ListBox("selectedSkill", (MultiSelectList)ViewBag.postingSkills, new { @class = "form-control custom-select2" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Apply" class="btn btn-default" />
                    <input type="button" value="Add to Cart" class="btn btn-default" id="btnAddToCart" />
                </div>





            </div>

        </div>


    </div>

    <hr />



</div>
}




<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
