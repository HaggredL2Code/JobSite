@model JobPosting.Models.Application

@{
    ViewBag.Title = "Create";
    var postingID = ViewBag.postingID;
    var applicantID = ViewBag.applicantID;
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Applications", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Application</h4>
    <hr />
    <dl class="dl-horizontal">
        @{
            JobPosting.Models.Posting posting = ViewBag.posting;

                <dt>
                    @Html.DisplayNameFor(lItem => posting.Position.JobGroup.GroupTitle)
                </dt>
                <dd>
                    @Html.DisplayFor(lItem => posting.Position.JobGroup.GroupTitle)
                </dd>
                <dt>
                    @Html.DisplayNameFor(lItem => posting.Position.PositionCode)
                </dt>
                <dd>
                    @Html.DisplayFor(lItem => posting.Position.PositionCode)
                </dd>
                <dt>
                    Locations
                </dt>

                foreach (var a in posting.JobLocations)
                {
                    <dd>
                        @Html.DisplayFor(aItem => a.Location.Address)
                    </dd>
                }
                <dt>
                    Qualifications
                </dt>
                foreach (var q in posting.JobRequirements)
                {
                    <dd>
                        @Html.DisplayFor(qItem => q.Qualification.QlfDescription)
                    </dd>
                }
                <dt>
                    @Html.DisplayNameFor(lItem => posting.pstCompensationType)
                </dt>
                <dd>
                    @if (posting.pstCompensationType == 1)
                    {
                        @: Hourly
                    }
                    else if (posting.pstCompensationType == 2)
                    {
                        @: Monthly
                    }
                    else
                    {
                        @: Yearly
                    }
                </dd>

                <dt>
                    @Html.DisplayNameFor(lItem => posting.pstJobDescription)
                </dt>
                <dd>
                    @Html.DisplayFor(lItem => posting.pstJobDescription)
                </dd>

                <dt>
                    @Html.DisplayNameFor(lItem => posting.pstNumPosition)
                </dt>
                <dd>
                    @Html.DisplayFor(lItem => posting.pstNumPosition)
                </dd>

                <dt>
                    @Html.DisplayNameFor(lItem => posting.pstFTE)
                </dt>
                <dd>
                    @Html.DisplayFor(lItem => posting.pstFTE)
                </dd>

                <dt>
                    @Html.DisplayNameFor(lItem => posting.pstSalary)
                </dt>
                <dd>
                    @Html.DisplayFor(lItem => posting.pstSalary)
                </dd>


            
        }
    </dl>

    <hr />
    <input type="hidden" name="PostingID" id="PostingID" value="@postingID">
    <input type="hidden" name="ApplicantID" id="ApplicantID" value="@applicantID">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-md-2">
            Upload Resumes/Letters:
        </label>
        <div class="col-md-10">
            <input type="file" class="" name="theFiles" id="theFiles" multiple="multiple" /><br />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
            <label class="control-label col-md-2">Requirements</label>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt = 0;
                            var qualificationName = ViewBag.QualificationName;
                            var index = 0;
                            foreach (var jr in ViewBag.jobRequirements)
                            {
                                
                                if (cnt++ % 3 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedQualification"
                                           id="selectedQualification"
                                           value="@jr.QualificationID" />
                                    @qualificationName[index] @:&nbsp;&nbsp;
                                    @:</td>
                                index += 1;
                            }
                            @:</tr>
                        }
                    </table>
                </div>
            </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Add to Cart" class="btn btn-default" id="btnAddToCart" />
        </div>

        <p id="test">abc</p>
        <script src="~/Scripts/jquery-1.10.2.js"></script>
        <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
        <script type="text/javascript">
            $(document).ready(function () {
                var ApplicationsCart = [];

                if (sessionStorage.getItem("ApplicationsCart") != null) {
                    ApplicationsCart = JSON.parse(sessionStorage.getItem("ApplicationsCart"));
                }

                //preprocessing file
                var selectedQualification = [];
                var count = 0;
                var control = document.getElementById("theFiles");
                var resume = [];
                $("#theFiles").change(function (e) {
                    var files = control.files;
                    resume = [];
                    var fileInfo;
                    for (var i = 0; i < files.length; i++) {
                        var file = new Blob([files[i]]);
                        fileInfo = files[i];
                        var r = new FileReader();
                        r.readAsArrayBuffer(file);
                        r.onload = function () {
                            var arrayBuffer = this.result,
                                bytes = new Uint8Array(arrayBuffer);
                            console.log(bytes);
                            resume.push({
                                fileName: fileInfo.name,
                                content: bytes,
                                mimeType: fileInfo.type
                            });
                            console.log(resume);
                        };
                    }
                });
                $("#btnAddToCart").click(function () {
                    $("#selectedQualification:checked").each(function (e) {
                        selectedQualification.push($(this).val());
                    })
                    
                    ApplicationsCart.push({
                        Priority: $("#Priority").val(),
                        PostingID: $("#PostingID").val(),
                        ApplicantID: $("#ApplicantID").val(),
                        selectedQualification: selectedQualification,
                        Resume: resume

                    });

                    console.log(ApplicationsCart);

                    var jsonStr = JSON.stringify(ApplicationsCart);
                    sessionStorage.setItem("ApplicationsCart", jsonStr);

                    var cartValue = sessionStorage.getItem("ApplicationsCart");
                    var cartObj = JSON.parse(cartValue);
                    //selectedQualification.forEach(function (e) {
                    //    $("#test").text("The last Value: " + e)
                    //})
                    cartObj.forEach(function (e) {
                        count += 1
                        //$("#test").text("ApplicantID: " + e.ApplicantID + " PostingID: " + e.PostingID + " Priority: " + e.Priority + " SelecctedQualification: " + e.selectedQualification);
                        $("#test").text(count)
                    })

                });


            }
            )

        </script>
    </div>


</div>
}




<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
