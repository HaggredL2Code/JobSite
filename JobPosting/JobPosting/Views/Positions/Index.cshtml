@model IEnumerable<JobPosting.Models.Position>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


@using (Html.BeginForm())
{
    <p>
        Select By Job Group: @Html.DropDownList("JobGroupID", null, "All Job Groups", htmlAttributes: new { @class = "form-control" }) <br>
        Select By Position:  @Html.DropDownList("UnionID", null, "All Positions", htmlAttributes: new { @class = "form-control" }) <br>
        Select By Location:  @Html.DropDownList("Location", null, "All Locations", htmlAttributes: new { @class = "form-control" }) <br>
        Select By Code: @Html.TextBox("SearchString", null, new { @class = "form-control" }) <br>
        Select By Payment Type: @Html.DropDownList("PaymentTypeID", new SelectListItem[]
    {
                                  new SelectListItem{Value = "1", Text = "Hourly"},
                                  new SelectListItem{Value = "2", Text = "Monthly"},
                                  new SelectListItem{Value = "3", Text = "Yearly"}
                              }
    , "All Types", htmlAttributes: new { @class = "form-control" }) <br>
        
       Select By Salary: @Html.TextBox("SearchSalLower", null, new { @class = "form-control" }) - @Html.TextBox("SearchSalHigher", null, new { @class = "form-control" }) <br>

        <input type="submit" value="Filter" class="btn btn-default" />
        @Html.ActionLink("Clear", "Index")
    </p>

}


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.JobGroup.GroupTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Union.UnionName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PositionCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PositionDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PositionFTE)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PositionSalary)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.PositionCompensation)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.PositionCompensationType)
        </th>
        <th>
            Location
        </th>
        <th>
            Day of Work
        </th>
        <th>
            Requirements
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.JobGroup.GroupTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Union.UnionName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PositionCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PositionDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PositionFTE)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PositionSalary)
            </td>
            <td>
                @if (item.PositionCompensationType == 1)
                {
                    @:Hourly
                }
                else if (item.PositionCompensationType == 2)
                {
                    @:Monthly
                }
                else if (item.PositionCompensationType == 3)
                {
                    @:Yearly
                }

            </td>
            <td>
                @{
                    IEnumerable<JobPosting.Models.JobLocation> jobLocations = ViewBag.JobLocations;
                    foreach (var l in jobLocations.Where(j => j.PositionID == item.ID))
                    {
                        @Html.DisplayFor(loItem => l.Location.Address) <br />
                    }
                }
            </td>
            <td>
                @{
                    foreach (var day in item.Days)
                    {
                        @: @day.dayName <br />
                    }
                }
            </td>
            <td>
                @{
                    IEnumerable<JobPosting.Models.JobRequirement> jobRequirements = ViewBag.JobRequirements;
                    foreach (var r in jobRequirements.Where(j => j.PositionID == item.ID))
                    {
                        @Html.DisplayFor(reItem => r.Qualification.QlfDescription) <br />
                    }
                }
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
