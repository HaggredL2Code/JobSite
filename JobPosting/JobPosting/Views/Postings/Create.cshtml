@model JobPosting.Models.Posting

@{
    ViewBag.Title = "Create";
}



<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Posting</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.pstNumPosition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pstNumPosition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pstNumPosition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pstFTE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pstFTE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pstFTE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pstCompensationType, "Compensation Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("pstCompensationType", new SelectListItem[]
                                    {
                        new SelectListItem { Value = "1", Text = "Hourly"},
                        new SelectListItem { Value = "2", Text = "Monthly"},
                        new SelectListItem { Value = "3", Text = "Yearly"}
                                    }, "Select Compensation Type", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.pstCompensationType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pstSalary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pstSalary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pstSalary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pstJobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pstJobDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pstJobDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pstOpenDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
                @Html.EditorFor(model => model.pstOpenDate ,new { htmlAttributes = new { @class = "form-control datetime-picker", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.pstOpenDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pstEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pstEndDate, new { htmlAttributes = new { @class = "form-control datetime-picker", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.pstEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

         <div class="form-group">
            @Html.LabelFor(model => model.pstJobStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pstJobStartDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.pstJobStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pstJobEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pstJobEndDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                @Html.ValidationMessageFor(model => model.pstJobEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PositionID, "Position", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PositionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })
            </div>
        </div>

           <div class="form-group">
            <label class="control-label col-md-2">Locations</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.ListBox("selectedLocation", (MultiSelectList)ViewBag.Locations, new { @class = "form-control"})
                </div>
            </div>

        <div class="form-group">
            <label class="control-label col-md-2">Skills</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.ListBox("selectedSkill", (MultiSelectList)ViewBag.Skills, new { @class = "form-control"})
                </div>
            </div>

    <div class="form-group">
            <label class="control-label col-md-2">Day of Work</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.ListBox("selectedDay", (MultiSelectList)ViewBag.Day, new { @class = "form-control" })          
            </div>

        <div class="form-group">
            <label class="control-label col-md-2">Requirements</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.ListBox("selectedQualification", (MultiSelectList)ViewBag.Qualifications, new { @class = "form-control"})
                </div>
        </div>
        @if (!ViewBag.Flag)
        {
            <div class="form-group">
                <input type="checkbox" name="SavedAsTemplate" id="SavedAsTemplate"> Do you wish to save this Posting as Template?<br />
                <label class="control-label col-md-2" id="lblTemplate" style="display: none">Template Name: </label><input type="text" name="templateName" id="templateName" style="display: none" />
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>


    </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
    <script src="~/Scripts/date-picker.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#SavedAsTemplate").attr("value", "false");
            $("#SavedAsTemplate").change(function () {
                if (this.checked) {
                    $("#templateName").toggle("slow");
                    $("#lblTemplate").toggle("slow");
                    $("#SavedAsTemplate").attr("value", "true");
                }
                else {
                    $("#templateName").toggle("slow");
                    $("#lblTemplate").toggle("slow");
                    $("#SavedAsTemplate").attr("value", "false");
                }
            });


        })
    </script>
}
