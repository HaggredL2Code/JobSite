@model JobPosting.Models.Posting

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Posting</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.RowVersion)

    <div class="form-group">
        @Html.LabelFor(model => model.pstNumPosition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstNumPosition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstNumPosition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstFTE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstFTE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstFTE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstCompensationType, "Compensation Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("pstCompensationType", new SelectListItem[]
                                    {
                        new SelectListItem { Value = "1", Text = "Hourly"},
                        new SelectListItem { Value = "2", Text = "Monthly"},
                        new SelectListItem { Value = "3", Text = "Yearly"}
                                    }, "Select Compensation Type", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.pstCompensationType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstSalary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstSalary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstSalary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstJobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstJobDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstJobDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstOpenDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstOpenDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstOpenDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstEndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstEndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PositionID, "Position", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PositionID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
            <label class="control-label col-md-2">Locations</label>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt = 0;
                            IEnumerable<JobPosting.Models.JobLocation> positionLocations = ViewBag.JobLocations;
                            List<int> LocationList = new List<int>();
                            foreach (var l in positionLocations.Select(p => p.LocationID))
                            {
                                LocationList.Add(l);
                            }
                            bool Assigned = false;
                            foreach (var l in ViewBag.Locations)
                            {
                                Assigned = (LocationList.Contains(l.ID)) ? true : false;

                                if (cnt++ % 3 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedLocation"
                                           value="@l.ID"
                                            @(Html.Raw(Assigned ? "checked=\"checked\"" : "")) />
                                    @l.Address @:&nbsp;&nbsp;
                                    @:</td>
                            }
                            @:</tr>
                        }
                    </table>
                </div>
            </div>

         <div class="form-group">
            <label class="control-label col-md-2">Day of Work</label>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt1 = 0;
                            List<JobPosting.ViewModels.DayVM> days = ViewBag.Day;
                            foreach (var d in days)
                            {
                                if (cnt1++ % 3 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedDay"
                                           value="@d.DayID"
                                            @(Html.Raw(d.Assigned ? "checked=\"checked\"" : "")) />
                                    @d.dayName @:&nbsp;&nbsp;
                                    @:</td>
                            }
                            @:</tr>
                        }
                    </table>
                </div>
            </div>


        <div class="form-group">
            <label class="control-label col-md-2">Requirements</label>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt2 = 0;
                            IEnumerable<JobPosting.Models.JobRequirement> positionRequirements = ViewBag.JobRequirements;
                            List<int> requirementList = new List<int>();
                            foreach (var p in positionRequirements.Select(p => p.QualificationID))
                            {
                                requirementList.Add(p);
                            }
                            bool Assigned2 = false;
                            foreach (var q in ViewBag.Qualifications)
                            {
                                Assigned2 = (requirementList.Contains(q.ID)) ? true : false;

                                if (cnt2++ % 3 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedQualification"
                                           value="@q.ID"
                                            @(Html.Raw(Assigned2 ? "checked=\"checked\"" : "")) />
                                    @q.QlfDescription @:&nbsp;&nbsp;
                                    @:</td>
                            }
                            @:</tr>
                        }
                    </table>
                </div>
            </div>

     <div class="form-group">
            <label class="control-label col-md-2">Skills</label>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt3 = 0;
                            IEnumerable<JobPosting.Models.PostingSkill> postingSkills = ViewBag.PostingSkills;
                            List<int> skillList = new List<int>();
                            foreach (var s in postingSkills.Select(p => p.SkillID))
                            {
                                skillList.Add(s);
                            }
                            bool Assigned3 = false;
                            foreach (var s in ViewBag.Skills)
                            {
                                Assigned3 = (skillList.Contains(s.ID)) ? true : false;

                                if (cnt3++ % 3 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedSkill"
                                           value="@s.ID"
                                            @(Html.Raw(Assigned3 ? "checked=\"checked\"" : "")) />
                                    @s.SkillDescription @:&nbsp;&nbsp;
                                    @:</td>
                            }
                            @:</tr>
                        }
                    </table>
                </div>
            </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
