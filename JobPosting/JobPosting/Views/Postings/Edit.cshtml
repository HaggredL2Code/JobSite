@model JobPosting.Models.Posting

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Posting</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.RowVersion)

    <div class="form-group">
        @Html.LabelFor(model => model.pstNumPosition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstNumPosition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstNumPosition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstFTE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstFTE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstFTE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstCompensationType, "Compensation Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("pstCompensationType", new SelectListItem[]
                                    {
                        new SelectListItem { Value = "1", Text = "Hourly"},
                        new SelectListItem { Value = "2", Text = "Monthly"},
                        new SelectListItem { Value = "3", Text = "Yearly"}
                                    }, "Select Compensation Type", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.pstCompensationType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstSalary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstSalary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstSalary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstJobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstJobDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pstJobDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstOpenDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstOpenDate, new { htmlAttributes = new { @class = "form-control datetime-picker", onkeydown = "return false", onpaste = "return false" } })
            @Html.ValidationMessageFor(model => model.pstOpenDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstEndDate, new { htmlAttributes = new { @class = "form-control datetime-picker", onkeydown = "return false", onpaste = "return false" } })
            @Html.ValidationMessageFor(model => model.pstEndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstJobStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstJobStartDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
            @Html.ValidationMessageFor(model => model.pstJobStartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pstJobEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pstJobEndDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
            @Html.ValidationMessageFor(model => model.pstJobEndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PositionID, "Position", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PositionID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
            <label class="control-label col-md-2">Locations</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.ListBox("selectedLocation", (MultiSelectList)ViewBag.JobLocations, htmlAttributes: new {@class = "form-control listBox", @id="locationListBox"  })
            </div>
            <div class="col-md-10">
                @Html.DropDownList("JobLocationID", (SelectList)ViewBag.Location, htmlAttributes: new { @class = "form-control", @id="jobLocationID" })
                <input type="button" value="Add" id="addLocation">
                <input type="button" value="Remove" id="removeLocation">
            </div>
   </div>

         <div class="form-group">
            <label class="control-label col-md-2">Day of Work</label>
            <div class="col-md-offset-2 col-md-10"> 
                @Html.ListBox("selectedDay", (MultiSelectList)ViewBag.SelectedDay, htmlAttributes: new { @class = "form-control listBox", @id="dayListBox"})
            </div>
            <div class="col-md-10">
                @Html.DropDownList("DayID", (SelectList)ViewBag.Days, htmlAttributes: new { @class = "form-control", @id = "dayID" })
                <input type="button" value="Add" id="addDay" />
                <input type="button" value="Remove" id="removeDay">
            </div>
         </div>


        <div class="form-group">
            <label class="control-label col-md-2">Requirements</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.ListBox("selectedQualification", (MultiSelectList)ViewBag.JobRequirements, htmlAttributes: new { @class = "form-control listBox", @id="qualificationListBox"})
                
                </div>
            <div class="col-md-10">
                @Html.DropDownList("JobRequirementID", (SelectList)ViewBag.Requirement, htmlAttributes: new { @class = "form-control", @id = "jobRequirementID" })
                <input type="button" value="Add" id="addRequirement">
                <input type="button" value="Remove" id="removeRequirement">
            </div>
            </div>

        <div class="form-group">
            <label class="control-label col-md-2">Skills</label>
            <div class="col-md-offset-2 col-md-10">
                @Html.ListBox("selectedSkill", (MultiSelectList)ViewBag.PostingSkills, htmlAttributes: new { @class= "form-control listBox", @id="skillListBox"})
               
            </div>
            <div class="col-md-10">
                @Html.DropDownList("PostingSkillID", (SelectList)ViewBag.Skill, htmlAttributes: new { @class = "form-control", @id = "postingSkillID" })
                <input type="button" value="Add" id="addSkill">
                <input type="button" value="Remove" id="removeSkill">
            </div>
        </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" id="submit" />
            
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
    <script src="~/Scripts/date-picker.js"></script>
    <script src="~/Scripts/checkExisted.js"></script>
    <script src="~/Scripts/Code.js"></script>
    
}
