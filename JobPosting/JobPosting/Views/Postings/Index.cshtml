@model IEnumerable<JobPosting.Models.Posting>

@{
    ViewBag.Title = "Index";
    var Positions = ViewBag.Positions;
}

    <div class="row">
        <div class="col-10">

            <h2>Job Postings</h2>
        </div>
        <div class="col-2">
            <ul class="nav navbar-nav">
                <li class="dropdown">


                    <a href="#" data-toggle="dropdown" class="dropdown-toggle">Create New - Menu<b class="caret"></b></a>
                    <ul class="dropdown-menu">
                        <li>@Html.ActionLink("Create New", "Create")</li>
                        <li class="divider"></li>


                        @foreach (var p in Positions)
                {
                    string positionName = p.PositionDescription;

                    @*<li>@Html.ActionLink("Follow " + positionName, "Create", new { name = p.templateName }) - @Html.ActionLink("Delete", "DeleteTemplate", new { id = p.ID})</li>*@

                    @*<li>
                <a href="#" data-toggle="dropdown" class="dropdown-toggle">@postionName<b class="caret"></b></a>
                <ul class="dropdown-menu">*@
            foreach (var pt in ViewBag.postingTemplate)
            {
                if (pt.PositionID == p.ID)
                {
                    //string templateName = pt.templateName;
                    <li>@Html.ActionLink("Follow " + (string)pt.templateName + " Template", "Create", new { name = (string)pt.templateName }) - @Html.ActionLink("Delete", "DeleteTemplate", new { name = (string)pt.templateName })</li>
        }
    }
        @*</ul>
    </li>*@

}
                    </ul>
                </li>
            </ul>
        </div>
    </div>

    <div class="row">
        <div class="col-3">

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Search</h5>
                    @using (Html.BeginForm())
                    {
                        <p>
                            Select By Job Group: @Html.DropDownList("JobGroupID", null, "All Job Groups", htmlAttributes: new { @class = "form-control" }) <br>
                            Select By Position:  @Html.DropDownList("PositionID", null, "All Positions", htmlAttributes: new { @class = "form-control" }) <br>
                            Select By Location:  @Html.DropDownList("Location", null, "All Locations", htmlAttributes: new { @class = "form-control" }) <br>
                            Select By Payment Type: @Html.DropDownList("PaymentTypeID", new SelectListItem[]
{
new SelectListItem{Value = "1", Text = "Hourly"},
new SelectListItem{Value = "2", Text = "Monthly"},
new SelectListItem{Value = "3", Text = "Yearly"}
}, "All Types", htmlAttributes: new { @class = "form-control" }) <br />
                            <input type="submit" value="Filter" class="btn btn-default" />
                            @Html.ActionLink("Clear", "Index")
                        </p>
                    }
                </div>
            </div>
        </div>
        <div class="col-9">
            <table class="table table-hover table-sm">
                <tr class="bg-primary text-white">
                    <th>
                        @Html.DisplayNameFor(model => model.Position.PositionCode)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Position.JobGroup.GroupTitle)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Position.PositionDescription)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.pstNumPosition)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.pstEndDate)
                    </th>

                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    if (item.Enabled)
                    {
                        bool flag = true;
                        if (User.IsInRole("Hiring Team") || User.IsInRole("User"))
                        {
                            if (item.CreatedBy != User.Identity.Name)
                            {
                                flag = false;
                            }
                        }
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Position.PositionCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Position.JobGroup.GroupTitle)
                            </td>
                            <td>
                                @Html.ActionLink(item.Position.PositionDescription.ToString(), "Details", new { id = item.ID })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.pstNumPosition)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.pstEndDate)
                            </td>


                            @if (flag)
                            {
                                <td>
                                    <div class="btn-group-vertical">

                                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-primary btn-sm" })
                                        @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-primary btn-sm" })
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                }

            </table>
        </div>
    </div>
